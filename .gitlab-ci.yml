variables:
  GIT_STRATEGY: none
  GIT_SUBMODULE_STRATEGY: none

stages:
  - checkout
  - build
  - test

build-repos:
  stage: checkout
  tags:
    - bsg
  script:
    - echo "Cloning repos..."
    - rm -rf bsg_cadenv basejump_stl bsg_manycore
    - cp -r $BSG_CADENV_DIR bsg_cadenv
    - git clone https://github.com/bespoke-silicon-group/basejump_stl.git
    - git clone --recursive -b $CI_COMMIT_REF_NAME https://github.com/bespoke-silicon-group/bsg_manycore.git
    - >
      if [ -e cache/ ]; then
        echo "Pulling toolchain installation from cache...";
        cp -r cache/riscv-install bsg_manycore/software/riscv-tools/;
        cp -r cache/llvm bsg_manycore/software/riscv-tools/;
      else
        echo "Building toolchain...";
        make -C bsg_manycore/software/riscv-tools clean-all install-clean;
        echo "Updating cache with latest toolchain";
        mkdir -p cache/;
        cp -r bsg_manycore/software/riscv-tools/riscv-install cache/;
        cp -r bsg_manycore/software/riscv-tools/llvm cache/;
      fi;
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: push
  only:
    refs:
      - /^ci_.*$/
      - master

build-toolchain:
  stage: build
  tags:
    - bsg
  script:
    - echo "Building toolchain..."
    - make -C bsg_manycore/software/riscv-tools clean-all install-clean
    - echo "Updating cache with latest toolchain"
    - cp -r bsg_manycore/software/riscv-tools/riscv-install cache/
    - cp -r bsg_manycore/software/riscv-tools/llvm cache/
  only:
    refs:
      - /^ci_.*$/
      - master
    changes:
      - "**/riscv-tools/*"

test-spmd:
  stage: test
  tags:
    - bsg
    - vcs
  script:
    - echo "Running Manycore regression..."
    - cd bsg_manycore
    - ./ci/regress.sh
  cache:
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master

test-cosim:
  when: manual
  stage: test
  tags:
    - bsg
    - vcs
  script:
    - echo "Configuring bsg_bladerunner..."
    - rm -rf bsg_bladerunner
    - git clone https://github.com/bespoke-silicon-group/bsg_bladerunner.git 
    - cd bsg_bladerunner
    - cp -r $BSG_CADENV_DIR bsg_cadenv
    - make -f amibuild.mk setup-aws-fpga AWS_FPGA_REPO_DIR=$CI_PROJECT_DIR/bsg_bladerunner/aws-fpga
    - git submodule update --init --recursive
    - cd bsg_f1; git checkout master; cd ..
    - cd bsg_manycore; git checkout $CI_COMMIT_REF_NAME
    - cd software/riscv-tools
    - ln -s ../../../../bsg_manycore/software/riscv-tools/riscv-install .
    - ln -s ../../../../bsg_manycore/software/riscv-tools/llvm .
    - echo "Running COSIM..."
    - cd bsg_bladerunner/bsg_f1/testbenches
    - make regression
  cache:
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
