variables:
  GIT_STRATEGY: none
  GIT_SUBMODULE_STRATEGY: none

stages:
  - checkout
  - build
  - check
  - test_1x1
  - test_1x1_hbm2
  - test_4x4
  - test_4x4_hbm2

build-repos:
  stage: checkout
  tags:
    - bsg
  script:
    - echo "Cloning repos..."
    - rm -rf bsg_cadenv basejump_stl bsg_manycore
    - cp -r $BSG_CADENV_DIR bsg_cadenv
    - git clone --recursive -b master https://github.com/bespoke-silicon-group/basejump_stl.git
    - git clone --recursive -b $CI_COMMIT_REF_NAME https://github.com/bespoke-silicon-group/bsg_manycore.git
    - echo "pwd"
    - echo $CI_PROJECT_DIR
    - echo $CI_COMMIT_REF_NAME
    - >
      if [ -e cache/ ]; then
        echo "Pulling toolchain installation from cache...";
        cp -r cache/riscv-install bsg_manycore/software/riscv-tools/;
        cp -r cache/llvm bsg_manycore/software/riscv-tools/;
      else
        echo "Building toolchain...";
        make -C bsg_manycore/software/riscv-tools clean-all install-clean;
        echo "Updating cache with latest toolchain";
        mkdir -p cache/;
        cp -r bsg_manycore/software/riscv-tools/riscv-install cache/;
        cp -r bsg_manycore/software/riscv-tools/llvm cache/;
      fi;
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: push
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2

build-machines:
  stage: build
  tags:
    - bsg
  script:
    - echo "Building machines..."
    - cd bsg_manycore/machines
    - make clean
    - make
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2

build-toolchain:
  stage: build
  tags:
    - bsg
  script:
    - echo "Building toolchain..."
    - make -C bsg_manycore/software/riscv-tools clean-all install-clean > toolchain.log
    - echo "Updating cache with latest toolchain"
    - pwd
    - rm -rf cache/riscv-install
    - rm -rf cache/llvm
    - cp -r bsg_manycore/software/riscv-tools/riscv-install cache/
    - cp -r bsg_manycore/software/riscv-tools/llvm cache/
  when: manual
  only:
    refs:
      - /^ci_.*$/
      - master
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
  artifacts:
    when: always
    paths:
      - "*.log"
  retry: 2

surelog:
  stage: check
  allow_failure: true
  tags:
    - bsg
  script:
    - echo "Parsing with Surelog"
    - cd bsg_manycore
    - pwd
    - ./ci/surelog.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2

verilator:
  stage: check
  allow_failure: true
  tags:
    - bsg
  script:
    - echo "Verifying verilator build"
    - cd bsg_manycore
    - pwd
    - ./ci/verilator.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2

test-spmd:
  stage: test_1x1
  tags:
    - bsg
    - vcs
  script:
    - echo "Running Manycore regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/spmd.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2


test-beebs:
  stage: test_1x1
  tags:
    - bsg
    - vcs
  script:
    - echo "Running BEEBS regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/beebs.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2


test-interrupt:
  stage: test_1x1
  tags:
    - bsg
    - vcs
  script:
    - echo "Running interrupt regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/interrupt.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2



test-spmd-hbm2:
  stage: test_1x1_hbm2
  tags:
    - bsg
    - vcs
  script:
    - export BSG_MACHINE_PATH=$CI_PROJECT_DIR/bsg_manycore/machines/pod_1x1_hbm2
    - echo "Running Manycore regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/spmd.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2


test-interrupt-hbm2:
  stage: test_1x1_hbm2
  tags:
    - bsg
    - vcs
  script:
    - export BSG_MACHINE_PATH=$CI_PROJECT_DIR/bsg_manycore/machines/pod_1x1_hbm2
    - echo "Running interrupt regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/interrupt.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2







test-spmd-4x4:
  stage: test_4x4
  tags:
    - bsg
    - vcs
  script:
    - export BSG_MACHINE_PATH=$CI_PROJECT_DIR/bsg_manycore/machines/pod_4x4
    - echo "Running Manycore regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/spmd.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2


test-interrupt-4x4:
  stage: test_4x4
  tags:
    - bsg
    - vcs
  script:
    - export BSG_MACHINE_PATH=$CI_PROJECT_DIR/bsg_manycore/machines/pod_4x4
    - echo "Running interrupt regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/interrupt.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2


test-spmd-4x4-hbm2:
  stage: test_4x4_hbm2
  tags:
    - bsg
    - vcs
  script:
    - export BSG_MACHINE_PATH=$CI_PROJECT_DIR/bsg_manycore/machines/pod_4x4_hbm2
    - echo "Running Manycore regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/spmd.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2


test-interrupt-4x4-hbm2:
  stage: test_4x4_hbm2
  tags:
    - bsg
    - vcs
  script:
    - export BSG_MACHINE_PATH=$CI_PROJECT_DIR/bsg_manycore/machines/pod_4x4_hbm2
    - echo "Running interrupt regression..."
    - cd bsg_manycore
    - pwd
    - ./ci/interrupt.sh
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - $CI_PROJECT_DIR/bsg_cadenv
      - $CI_PROJECT_DIR/basejump_stl
      - $CI_PROJECT_DIR/bsg_manycore
      - $CI_PROJECT_DIR/bsg_bladerunner
    policy: pull
  only:
    refs:
      - /^ci_.*$/
      - master
  retry: 2
