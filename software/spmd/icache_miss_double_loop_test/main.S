// This test calculates the sum using two loops that are 4096 byte apart in program space, so that every iteration of the loop runs into icache miss.



#include "bsg_manycore_arch.h"
#include "bsg_manycore_asm.h"


#define N 512
.section .dram, "aw"
dram_arr:
  .word 0, 1, 2, 3, 4, 5, 6, 7
  .word 8, 9, 10, 11, 12, 13, 14, 15
  .word 16, 17, 18, 19, 20, 21, 22, 23
  .word 24, 25, 26, 27, 28, 29, 30, 31
  .word 32, 33, 34, 35, 36, 37, 38, 39
  .word 40, 41, 42, 43, 44, 45, 46, 47
  .word 48, 49, 50, 51, 52, 53, 54, 55
  .word 56, 57, 58, 59, 60, 61, 62, 63
  .word 64, 65, 66, 67, 68, 69, 70, 71
  .word 72, 73, 74, 75, 76, 77, 78, 79
  .word 80, 81, 82, 83, 84, 85, 86, 87
  .word 88, 89, 90, 91, 92, 93, 94, 95
  .word 96, 97, 98, 99, 100, 101, 102, 103
  .word 104, 105, 106, 107, 108, 109, 110, 111
  .word 112, 113, 114, 115, 116, 117, 118, 119
  .word 120, 121, 122, 123, 124, 125, 126, 127
  .word 128, 129, 130, 131, 132, 133, 134, 135
  .word 136, 137, 138, 139, 140, 141, 142, 143
  .word 144, 145, 146, 147, 148, 149, 150, 151
  .word 152, 153, 154, 155, 156, 157, 158, 159
  .word 160, 161, 162, 163, 164, 165, 166, 167
  .word 168, 169, 170, 171, 172, 173, 174, 175
  .word 176, 177, 178, 179, 180, 181, 182, 183
  .word 184, 185, 186, 187, 188, 189, 190, 191
  .word 192, 193, 194, 195, 196, 197, 198, 199
  .word 200, 201, 202, 203, 204, 205, 206, 207
  .word 208, 209, 210, 211, 212, 213, 214, 215
  .word 216, 217, 218, 219, 220, 221, 222, 223
  .word 224, 225, 226, 227, 228, 229, 230, 231
  .word 232, 233, 234, 235, 236, 237, 238, 239
  .word 240, 241, 242, 243, 244, 245, 246, 247
  .word 248, 249, 250, 251, 252, 253, 254, 255
  .word 256, 257, 258, 259, 260, 261, 262, 263
  .word 264, 265, 266, 267, 268, 269, 270, 271
  .word 272, 273, 274, 275, 276, 277, 278, 279
  .word 280, 281, 282, 283, 284, 285, 286, 287
  .word 288, 289, 290, 291, 292, 293, 294, 295
  .word 296, 297, 298, 299, 300, 301, 302, 303
  .word 304, 305, 306, 307, 308, 309, 310, 311
  .word 312, 313, 314, 315, 316, 317, 318, 319
  .word 320, 321, 322, 323, 324, 325, 326, 327
  .word 328, 329, 330, 331, 332, 333, 334, 335
  .word 336, 337, 338, 339, 340, 341, 342, 343
  .word 344, 345, 346, 347, 348, 349, 350, 351
  .word 352, 353, 354, 355, 356, 357, 358, 359
  .word 360, 361, 362, 363, 364, 365, 366, 367
  .word 368, 369, 370, 371, 372, 373, 374, 375
  .word 376, 377, 378, 379, 380, 381, 382, 383
  .word 384, 385, 386, 387, 388, 389, 390, 391
  .word 392, 393, 394, 395, 396, 397, 398, 399
  .word 400, 401, 402, 403, 404, 405, 406, 407
  .word 408, 409, 410, 411, 412, 413, 414, 415
  .word 416, 417, 418, 419, 420, 421, 422, 423
  .word 424, 425, 426, 427, 428, 429, 430, 431
  .word 432, 433, 434, 435, 436, 437, 438, 439
  .word 440, 441, 442, 443, 444, 445, 446, 447
  .word 448, 449, 450, 451, 452, 453, 454, 455
  .word 456, 457, 458, 459, 460, 461, 462, 463
  .word 464, 465, 466, 467, 468, 469, 470, 471
  .word 472, 473, 474, 475, 476, 477, 478, 479
  .word 480, 481, 482, 483, 484, 485, 486, 487
  .word 488, 489, 490, 491, 492, 493, 494, 495
  .word 496, 497, 498, 499, 500, 501, 502, 503
  .word 504, 505, 506, 507, 508, 509, 510, 511


.text
  bsg_asm_init_regfile

test_init:
  li s0, N
  la s1, dram_arr
  li s2, 0 // sum

.org (4096*1)
loop0:
  lw t0, 0(s1)
  lw t1, 4(s1)
  lw t2, 8(s1)
  lw t3, 12(s1)
  add s2, s2, t0
  add s2, s2, t1
  add s2, s2, t2
  add s2, s2, t3
  addi s0, s0, -4
  addi s1, s1, 16
  bne x0, s0, loop1
  j check_result

.org (4096*2)
loop1:
  lw t0, 0(s1)
  lw t1, 4(s1)
  lw t2, 8(s1)
  lw t3, 12(s1)
  add s2, s2, t0
  add s2, s2, t1
  add s2, s2, t2
  add s2, s2, t3
  addi s0, s0, -4
  addi s1, s1, 16
  bne x0, s0, loop0
  j check_result


.org (4096*3)
check_result:
  li t0, 130816 // ANSWER
  bne t0, s2, fail

pass:
  bsg_asm_finish(IO_X_INDEX, 0)
pass_loop:
  j pass_loop
fail:
  bsg_asm_print_reg(IO_X_INDEX, s2)
  bsg_asm_fail(IO_X_INDEX, 0)
fail_loop:
  j fail_loop
