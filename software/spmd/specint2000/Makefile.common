bsg_tiles_X = 1
bsg_tiles_Y = 1
BSG_FPU_OP = 0
BSG_NEWLIB = 1
BSG_ELF_DEFAULT_DATA_LOC = SHARED

PROG_NAME := $(BENCHMARK)
BENCHMARK_DIR := $(BSG_MANYCORE_DIR)/software/spmd/specint2000/greenlight/benchmarks/spec2000/CINT2000/$(BENCHMARK)
OBJECT_FILES := $(BENCHMARK_OBJS)
IN_FILES := $(BENCHMARK_INPS)

include ../Makefile.include

vpath %.c $(BENCHMARK_DIR)/src.raw
vpath %.h $(BENCHMARK_DIR)/src.raw
vpath %.c ./rawlib

RISCV_GCC_EXTRA_OPTS = -Irawlib $(BENCHMARK_DEFS)

ifdef SPIKE

all: $(PROG_NAME).spike

RISCV_GCC_EXTRA_OPTS += -D__spike__
LINK_SCRIPT = $(BSG_MANYCORE_DIR)/software/spmd/common/spike.ld

else #ifndef SPIKE

all: $(PROG_NAME).run

LINK_SCRIPT = $(BSG_MANYCORE_DIR)/software/spmd/common/link_dram.ld

endif # SPIKE

$(PROG_NAME).o: Makefile

$(PROG_NAME).riscv: $(OBJECT_FILES) $(SPMD_COMMON_OBJECTS) $(BSG_MANYCORE_LIB) $(CRT_OBJ)
	$(RISCV_LINK) $(OBJECT_FILES) $(SPMD_COMMON_OBJECTS) -L. -l:$(BSG_MANYCORE_LIB) -o $@ $(RISCV_LINK_OPTS)


# Rule to run benchmarks on host (x86)

HOST_OBJS = $(subst .o,_host.o,$(BENCHMARK_OBJS))

%_host.o: %.c
	gcc -c $< -o $@  -D__host__ -Irawlib

run_host: $(HOST_OBJS) $(IN_FILES)
	gcc -o $(BENCHMARK).host $(HOST_OBJS)
	./$(BENCHMARK).host $(IN_FILES) 1

include ../../mk/Makefile.tail_rules
