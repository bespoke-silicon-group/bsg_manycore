diff --git a/Makefile b/Makefile
index e5e6e42..115a9db 100644
--- a/Makefile
+++ b/Makefile
@@ -285,6 +285,9 @@ $(eval $(call test_CompareRecFN_template,CompareRecF64_lt,f64_lt,))
 $(eval $(call test_CompareRecFN_template,CompareRecF64_le,f64_le,))
 $(eval $(call test_CompareRecFN_template,CompareRecF64_eq,f64_eq,))
 
+bsg_ucb_hardfloat.v: src/main/scala/*.scala
+	sbt -DchiselVersion=$(CHISEL_VERSION) "run bsg_ucb_hardfloat --targetDir $(BSG_UCB_HARDFLOAT_DIR) --backend v"
+
 test-c: $(addprefix test-c-, $(tests))
 	@ if grep -q "expected" test-c-*.log; then \
 		echo "some test FAILED!!!"; \
diff --git a/src/main/scala/bsg_ucb_hardfloat.scala b/src/main/scala/bsg_ucb_hardfloat.scala
new file mode 100644
index 0000000..a19c64f
--- /dev/null
+++ b/src/main/scala/bsg_ucb_hardfloat.scala
@@ -0,0 +1,55 @@
+package hardfloat
+
+import Chisel._
+/*
+
+This scala file is only used for generating verilog modules
+
+*/
+
+/*******************************************************************/
+
+/* define the module to convert  Record float to IEEE 754 float  */
+class bsg_fNFromRecFN(expWidth: Int, sigWidth: Int) extends Module
+{
+    val io = new Bundle {
+        val a = Bits(INPUT, expWidth + sigWidth + 1)
+        val out = Bits(OUTPUT, expWidth + sigWidth)
+    }
+
+    io.out := fNFromRecFN(expWidth, sigWidth, io.a)
+
+}
+
+/* define the module to convert IEEE 754 float to Record float */
+class bsg_recFNFromFN(expWidth: Int, sigWidth: Int) extends Module
+{
+    val io = new Bundle {
+        val a = Bits(INPUT, expWidth + sigWidth)
+        val out = Bits(OUTPUT, expWidth + sigWidth + 1)
+    }
+
+    io.out := recFNFromFN(expWidth, sigWidth, io.a)
+}
+
+/* define the classify module  */
+class bsg_classifyRecFN(intWidth:Int, expWidth:Int, sigWidth: Int) extends Module
+{
+    val io = new Bundle{
+        val a  = Bits(INPUT, expWidth + sigWidth + 1)
+        val out = Bits(OUTPUT,  intWidth)
+    }
+    io.out := classifyRecFN(expWidth, sigWidth, io.a)
+}
+
+class bsg_ucb_hardfloat extends Module
+{
+    val io = new Bundle {}
+    val mulAddRecFN     = Module(new MulAddRecFN(8, 24))
+    val compareRecFN    = Module(new CompareRecFN(8, 24))
+    val recFNToIN       = Module(new RecFNToIN(8, 24,32))
+    val inToRecFN       = Module(new INToRecFN(32,8,24))
+    val fNFromRecFN_m   = Module(new bsg_fNFromRecFN(8,24))
+    val recFNFromFN_m   = Module(new bsg_recFNFromFN(8,24))
+    val classifyRecFN_m = Module(new bsg_classifyRecFN(32,8,24))
+}
diff --git a/src/main/scala/tests.scala b/src/main/scala/tests.scala
index e679b51..41c7492 100644
--- a/src/main/scala/tests.scala
+++ b/src/main/scala/tests.scala
@@ -136,6 +136,9 @@ object FMATest {
             case "CompareRecF64_eq" =>
                 chiselMain(
                     testArgs, () => Module(new ValExec_CompareRecF64_eq))
+            case "bsg_ucb_hardfloat" =>
+                chiselMain(
+                    testArgs, () => Module(new bsg_ucb_hardfloat))
         }
     }
 }
